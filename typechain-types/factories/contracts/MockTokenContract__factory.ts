/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MockTokenContract,
  MockTokenContractInterface,
} from "../../contracts/MockTokenContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061012f806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806370a08231146037578063e30443bc14606f575b600080fd5b605d604236600460b3565b6001600160a01b031660009081526020819052604090205490565b60405190815260200160405180910390f35b6096607a36600460d2565b6001600160a01b03909116600090815260208190526040902055565b005b80356001600160a01b038116811460ae57600080fd5b919050565b60006020828403121560c457600080fd5b60cb826098565b9392505050565b6000806040838503121560e457600080fd5b60eb836098565b94602093909301359350505056fea264697066735822122055827fc42f313bc6ef7553e4aa8c439c5565af8afa76a60eef09db30b593d5c464736f6c63430008180033";

type MockTokenContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockTokenContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockTokenContract__factory extends ContractFactory {
  constructor(...args: MockTokenContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockTokenContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockTokenContract__factory {
    return super.connect(runner) as MockTokenContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockTokenContractInterface {
    return new Interface(_abi) as MockTokenContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MockTokenContract {
    return new Contract(address, _abi, runner) as unknown as MockTokenContract;
  }
}
