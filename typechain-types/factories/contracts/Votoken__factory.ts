/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Votoken, VotokenInterface } from "../../contracts/Votoken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "MintAlreadyMinted",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "hasAlreadyMinted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051806040016040528060078152602001662b37ba37b5b2b760c91b8152506040518060400160405280600381526020016256544b60e81b815250816003908161005c9190610116565b5060046100698282610116565b505033608052506101d5565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061009f57607f821691505b6020821081036100bf57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610111576000816000526020600020601f850160051c810160208610156100ee5750805b601f850160051c820191505b8181101561010d578281556001016100fa565b5050505b505050565b81516001600160401b0381111561012f5761012f610075565b6101438161013d845461008b565b846100c5565b602080601f83116001811461017857600084156101605750858301515b600019600386901b1c1916600185901b17855561010d565b600085815260208120601f198616915b828110156101a757888601518255948401946001909101908401610188565b50858210156101c55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6080516106e66101f0600039600061019201526106e66000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80633194ccf9116100715780633194ccf91461013857806370a08231146101645780638da5cb5b1461018d57806395d89b41146101cc578063a9059cbb146101d4578063dd62ed3e146101e257600080fd5b806306fdde03146100b9578063095ea7b3146100d75780631249c58b146100fa57806318160ddd1461010457806323b872dd14610116578063313ce56714610129575b600080fd5b6100c16101f5565b6040516100ce919061052f565b60405180910390f35b6100ea6100e536600461059a565b610287565b60405190151581526020016100ce565b6101026102e6565b005b6002545b6040519081526020016100ce565b6100ea6101243660046105c4565b610345565b604051601281526020016100ce565b6100ea610146366004610600565b6001600160a01b031660009081526005602052604090205460ff1690565b610108610172366004610600565b6001600160a01b031660009081526020819052604090205490565b6101b47f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100ce565b6100c161038f565b6100ea61012436600461059a565b6101086101f0366004610622565b61039e565b60606003805461020490610655565b80601f016020809104026020016040519081016040528092919081815260200182805461023090610655565b801561027d5780601f106102525761010080835404028352916020019161027d565b820191906000526020600020905b81548152906001019060200180831161026057829003601f168201915b5050505050905090565b60405162461bcd60e51b815260206004820152602660248201527f417070726f76616c206973206e6f7420616c6c6f77656420666f722074686973604482015265103a37b5b2b760d11b60648201526000906084015b60405180910390fd5b3360009081526005602052604090205460ff16156103175760405163a3e1010d60e01b815260040160405180910390fd5b61032933670de0b6b3a76400006103cb565b336000908152600560205260409020805460ff19166001179055565b600060405162461bcd60e51b81526004016102dd906020808252818101527f5468697320746f6b656e2063616e6e6f74206265207472616e73666572726564604082015260600190565b60606004805461020490610655565b6001600160a01b038083166000908152600160209081526040808320938516835292905220545b92915050565b6001600160a01b0382166103f55760405163ec442f0560e01b8152600060048201526024016102dd565b61040160008383610405565b5050565b6001600160a01b038316610430578060026000828254610425919061068f565b909155506104a29050565b6001600160a01b038316600090815260208190526040902054818110156104835760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016102dd565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166104be576002805482900390556104dd565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161052291815260200190565b60405180910390a3505050565b60006020808352835180602085015260005b8181101561055d57858101830151858201604001528201610541565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461059557600080fd5b919050565b600080604083850312156105ad57600080fd5b6105b68361057e565b946020939093013593505050565b6000806000606084860312156105d957600080fd5b6105e28461057e565b92506105f06020850161057e565b9150604084013590509250925092565b60006020828403121561061257600080fd5b61061b8261057e565b9392505050565b6000806040838503121561063557600080fd5b61063e8361057e565b915061064c6020840161057e565b90509250929050565b600181811c9082168061066957607f821691505b60208210810361068957634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156103c557634e487b7160e01b600052601160045260246000fdfea2646970667358221220e9ab4f7641132fc61d970c27e6297096abe5fc3a3276ba391c976448786593df64736f6c63430008180033";

type VotokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Votoken__factory extends ContractFactory {
  constructor(...args: VotokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Votoken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Votoken__factory {
    return super.connect(runner) as Votoken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotokenInterface {
    return new Interface(_abi) as VotokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Votoken {
    return new Contract(address, _abi, runner) as unknown as Votoken;
  }
}
