/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Votoken, VotokenInterface } from "../../contracts/Votoken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "MintAlreadyMinted",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "hasAlreadyMinted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040518060400160405280600781526020017f566f746f6b656e000000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f56544b000000000000000000000000000000000000000000000000000000000081525081600390816200008f919062000393565b508060049081620000a1919062000393565b505050620000c067129cc48e5f5ec67c60c01b6200011660201b60201c565b620000dc670103ab6ae142544760c01b6200011660201b60201c565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250506200047a565b50565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200019b57607f821691505b602082108103620001b157620001b062000153565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200021b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620001dc565b620002278683620001dc565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002746200026e62000268846200023f565b62000249565b6200023f565b9050919050565b6000819050919050565b620002908362000253565b620002a86200029f826200027b565b848454620001e9565b825550505050565b600090565b620002bf620002b0565b620002cc81848462000285565b505050565b5b81811015620002f457620002e8600082620002b5565b600181019050620002d2565b5050565b601f82111562000343576200030d81620001b7565b6200031884620001cc565b8101602085101562000328578190505b620003406200033785620001cc565b830182620002d1565b50505b505050565b600082821c905092915050565b6000620003686000198460080262000348565b1980831691505092915050565b600062000383838362000355565b9150826002028217905092915050565b6200039e8262000119565b67ffffffffffffffff811115620003ba57620003b962000124565b5b620003c6825462000182565b620003d3828285620002f8565b600060209050601f8311600181146200040b5760008415620003f6578287015190505b62000402858262000375565b86555062000472565b601f1984166200041b86620001b7565b60005b8281101562000445578489015182556001820191506020850194506020810190506200041e565b8683101562000465578489015162000461601f89168262000355565b8355505b6001600288020188555050505b505050505050565b60805161102862000496600039600061069001526110286000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80633194ccf9116100715780633194ccf91461017d57806370a08231146101ad5780638da5cb5b146101dd57806395d89b41146101fb578063a9059cbb14610219578063dd62ed3e14610249576100b4565b806306fdde03146100b9578063095ea7b3146100d75780631249c58b1461010757806318160ddd1461011157806323b872dd1461012f578063313ce5671461015f575b600080fd5b6100c1610279565b6040516100ce9190610b7e565b60405180910390f35b6100f160048036038101906100ec9190610c39565b61030b565b6040516100fe9190610c94565b60405180910390f35b61010f610384565b005b610119610528565b6040516101269190610cbe565b60405180910390f35b61014960048036038101906101449190610cd9565b610532565b6040516101569190610c94565b60405180910390f35b6101676105ab565b6040516101749190610d48565b60405180910390f35b61019760048036038101906101929190610d63565b6105b4565b6040516101a49190610c94565b60405180910390f35b6101c760048036038101906101c29190610d63565b610646565b6040516101d49190610cbe565b60405180910390f35b6101e561068e565b6040516101f29190610d9f565b60405180910390f35b6102036106b2565b6040516102109190610b7e565b60405180910390f35b610233600480360381019061022e9190610c39565b610744565b6040516102409190610c94565b60405180910390f35b610263600480360381019061025e9190610dba565b6107bd565b6040516102709190610cbe565b60405180910390f35b60606003805461028890610e29565b80601f01602080910402602001604051908101604052809291908181526020018280546102b490610e29565b80156103015780601f106102d657610100808354040283529160200191610301565b820191906000526020600020905b8154815290600101906020018083116102e457829003601f168201915b5050505050905090565b600061032167f2969f92c709557660c01b610844565b61033567c4c7e59c98b5686460c01b610844565b61034967e6ad74b957eca6b760c01b610844565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037b90610ecc565b60405180910390fd5b61039867fefd1471e45d161060c01b610844565b6103ac678ecf99ddae0e42d960c01b610844565b6103c0671380c8e7bcce052160c01b610844565b600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561046c57610426673bf2b5a0ada48b0e60c01b610844565b61043a67b5d1f1bf62aac07160c01b610844565b6040517fa3e1010d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6104806771a07e35e74332c160c01b610844565b61049467b6f4b2097abf23a860c01b610844565b6104a867102528971fe5973160c01b610844565b6104ba33670de0b6b3a7640000610847565b6104ce67476dfd5a6d0d20dd60c01b610844565b6001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550565b6000600254905090565b60006105486743dd8097c338afbb60c01b610844565b61055c67f8c60b7dd81fabad60c01b610844565b610570671027ab5e5ac690ec60c01b610844565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a290610f38565b60405180910390fd5b60006012905090565b60006105ca67ac04eb36bf0222c360c01b610844565b6105de6774568aaa3258d06f60c01b610844565b6105f267415dba83844a476260c01b610844565b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060600480546106c190610e29565b80601f01602080910402602001604051908101604052809291908181526020018280546106ed90610e29565b801561073a5780601f1061070f5761010080835404028352916020019161073a565b820191906000526020600020905b81548152906001019060200180831161071d57829003601f168201915b5050505050905090565b600061075a67a094f000f620ddbe60c01b610844565b61076e675aafaf79c2a3a9ca60c01b610844565b61078267bc3ac204f2d2808660c01b610844565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b490610f38565b60405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108b95760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016108b09190610d9f565b60405180910390fd5b6108c5600083836108c9565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361091b57806002600082825461090f9190610f87565b925050819055506109ee565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156109a7578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161099e93929190610fbb565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a375780600260008282540392505081905550610a84565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ae19190610cbe565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b28578082015181840152602081019050610b0d565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b5082610aee565b610b5a8185610af9565b9350610b6a818560208601610b0a565b610b7381610b34565b840191505092915050565b60006020820190508181036000830152610b988184610b45565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610bd082610ba5565b9050919050565b610be081610bc5565b8114610beb57600080fd5b50565b600081359050610bfd81610bd7565b92915050565b6000819050919050565b610c1681610c03565b8114610c2157600080fd5b50565b600081359050610c3381610c0d565b92915050565b60008060408385031215610c5057610c4f610ba0565b5b6000610c5e85828601610bee565b9250506020610c6f85828601610c24565b9150509250929050565b60008115159050919050565b610c8e81610c79565b82525050565b6000602082019050610ca96000830184610c85565b92915050565b610cb881610c03565b82525050565b6000602082019050610cd36000830184610caf565b92915050565b600080600060608486031215610cf257610cf1610ba0565b5b6000610d0086828701610bee565b9350506020610d1186828701610bee565b9250506040610d2286828701610c24565b9150509250925092565b600060ff82169050919050565b610d4281610d2c565b82525050565b6000602082019050610d5d6000830184610d39565b92915050565b600060208284031215610d7957610d78610ba0565b5b6000610d8784828501610bee565b91505092915050565b610d9981610bc5565b82525050565b6000602082019050610db46000830184610d90565b92915050565b60008060408385031215610dd157610dd0610ba0565b5b6000610ddf85828601610bee565b9250506020610df085828601610bee565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e4157607f821691505b602082108103610e5457610e53610dfa565b5b50919050565b7f417070726f76616c206973206e6f7420616c6c6f77656420666f72207468697360008201527f20746f6b656e0000000000000000000000000000000000000000000000000000602082015250565b6000610eb6602683610af9565b9150610ec182610e5a565b604082019050919050565b60006020820190508181036000830152610ee581610ea9565b9050919050565b7f5468697320746f6b656e2063616e6e6f74206265207472616e73666572726564600082015250565b6000610f22602083610af9565b9150610f2d82610eec565b602082019050919050565b60006020820190508181036000830152610f5181610f15565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f9282610c03565b9150610f9d83610c03565b9250828201905080821115610fb557610fb4610f58565b5b92915050565b6000606082019050610fd06000830186610d90565b610fdd6020830185610caf565b610fea6040830184610caf565b94935050505056fea2646970667358221220e76c41cf6ef94cac5a8be2382287eb429ebff0185d9dc79ba9cb62fed4b9942164736f6c63430008180033";

type VotokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Votoken__factory extends ContractFactory {
  constructor(...args: VotokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Votoken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Votoken__factory {
    return super.connect(runner) as Votoken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotokenInterface {
    return new Interface(_abi) as VotokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Votoken {
    return new Contract(address, _abi, runner) as unknown as Votoken;
  }
}
