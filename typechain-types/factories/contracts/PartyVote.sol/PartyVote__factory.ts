/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PartyVote,
  PartyVoteInterface,
} from "../../../contracts/PartyVote.sol/PartyVote";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "vote__doneVoting",
    type: "error",
  },
  {
    inputs: [],
    name: "vote__noParty",
    type: "error",
  },
  {
    inputs: [],
    name: "vote__noToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "PartyAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "voter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "party",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "Voted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "addParty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getParties",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "count",
            type: "uint256",
          },
        ],
        internalType: "struct PartyVote.Party[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "voter",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "bool",
        name: "hasVoted",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalVoteUsed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200216b3803806200216b833981810160405281019062000037919062000510565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000587565b60405180910390fd5b620000be816200025160201b60201c565b50620000db672f9e943fbeb4ce0f60c01b6200031560201b60201c565b620000f767e87c5e666610f4de60c01b6200031560201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200015467398f2969c6bf7fd760c01b6200031560201b60201c565b6200017067ca682d2867fad2f060c01b6200031560201b60201c565b60046040518060400160405280848152602001600081525090806001815401808255809150506001900390600052602060002090600202016000909190919091506000820151816000019081620001c89190620007ef565b50602082015181600101555050620001f167e909043c2307ef6760c01b6200031560201b60201c565b6200020d6701cf0739a8a2505f60c01b6200031560201b60201c565b7f9f1ad4d7838109ae47198c66d274691e3fd72992445628823446cac30e5b2603826000604051620002419291906200096b565b60405180910390a150506200099f565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003818262000336565b810181811067ffffffffffffffff82111715620003a357620003a262000347565b5b80604052505050565b6000620003b862000318565b9050620003c6828262000376565b919050565b600067ffffffffffffffff821115620003e957620003e862000347565b5b620003f48262000336565b9050602081019050919050565b60005b838110156200042157808201518184015260208101905062000404565b60008484015250505050565b6000620004446200043e84620003cb565b620003ac565b90508281526020810184848401111562000463576200046262000331565b5b6200047084828562000401565b509392505050565b600082601f83011262000490576200048f6200032c565b5b8151620004a28482602086016200042d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620004d882620004ab565b9050919050565b620004ea81620004cb565b8114620004f657600080fd5b50565b6000815190506200050a81620004df565b92915050565b600080604083850312156200052a576200052962000322565b5b600083015167ffffffffffffffff8111156200054b576200054a62000327565b5b620005598582860162000478565b92505060206200056c85828601620004f9565b9150509250929050565b6200058181620004cb565b82525050565b60006020820190506200059e600083018462000576565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620005f757607f821691505b6020821081036200060d576200060c620005af565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006777fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000638565b62000683868362000638565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620006d0620006ca620006c4846200069b565b620006a5565b6200069b565b9050919050565b6000819050919050565b620006ec83620006af565b62000704620006fb82620006d7565b84845462000645565b825550505050565b600090565b6200071b6200070c565b62000728818484620006e1565b505050565b5b8181101562000750576200074460008262000711565b6001810190506200072e565b5050565b601f8211156200079f57620007698162000613565b620007748462000628565b8101602085101562000784578190505b6200079c620007938562000628565b8301826200072d565b50505b505050565b600082821c905092915050565b6000620007c460001984600802620007a4565b1980831691505092915050565b6000620007df8383620007b1565b9150826002028217905092915050565b620007fa82620005a4565b67ffffffffffffffff81111562000816576200081562000347565b5b620008228254620005de565b6200082f82828562000754565b600060209050601f83116001811462000867576000841562000852578287015190505b6200085e8582620007d1565b865550620008ce565b601f198416620008778662000613565b60005b82811015620008a1578489015182556001820191506020850194506020810190506200087a565b86831015620008c15784890151620008bd601f891682620007b1565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b6000620008f482620005a4565b620009008185620008d6565b93506200091281856020860162000401565b6200091d8162000336565b840191505092915050565b6000819050919050565b6000620009536200094d620009478462000928565b620006a5565b6200069b565b9050919050565b620009658162000932565b82525050565b60006040820190508181036000830152620009878185620008e7565b90506200099860208301846200095a565b9392505050565b6117bc80620009af6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80639ab24eb01161005b5780639ab24eb0146100ef578063a8311aa814610121578063f2fde38b1461013f578063fc36e15b1461015b57610088565b80632fcd16121461008d5780635df3e271146100ab578063715018a6146100c75780638da5cb5b146100d1575b600080fd5b610095610177565b6040516100a29190610d92565b60405180910390f35b6100c560048036038101906100c09190610f07565b61017d565b005b6100cf6102c1565b005b6100d96102d5565b6040516100e69190610f91565b60405180910390f35b61010960048036038101906101049190610fd8565b6102fe565b6040516101189392919061109f565b60405180910390f35b61012961053d565b6040516101369190611235565b60405180910390f35b61015960048036038101906101549190610fd8565b610674565b005b61017560048036038101906101709190610f07565b6106fa565b005b60035481565b61019167045cc7b798ffde6a60c01b610c23565b610199610c26565b6101ad67f15206b7a747667660c01b610c23565b6101c1670b8dc89595344b1960c01b610c23565b6101d567f649b9de4bd9eea860c01b610c23565b6101e967e8e4f9e174c7f19560c01b610c23565b6004604051806040016040528083815260200160008152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001908161023f9190611463565b5060208201518160010155505061026067afd8e98e63da469f60c01b610c23565b6102746743122f42089c943560c01b610c23565b7f9f1ad4d7838109ae47198c66d274691e3fd72992445628823446cac30e5b26038160016004805490506102a89190611564565b6040516102b6929190611598565b60405180910390a150565b6102c9610c26565b6102d36000610cad565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060008061031767ff1ea8d64dbaf7a460c01b610c23565b61032b6784862d14e394891960c01b610c23565b61033f67856337c8efe704bd60c01b610c23565b6000600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020604051806060016040529081600082015481526020016001820160009054906101000a900460ff1615151515815260200160028201548152505090506103d06791b9865dcc4fe9a560c01b610c23565b6103e467fceb0a423f78f7de60c01b610c23565b80602001516104365761040167146ba3949dc4ec4e60c01b610c23565b610415678fbcdf666aa420f360c01b610c23565b60008060405180602001604052806000815250919093509350935050610536565b61044a677ac14369b2b2335260c01b610c23565b61045e67fa4c73fcd9a23a2c60c01b610c23565b61047267dfbabd45a239400960c01b610c23565b600481600001518154811061048a576104896115c8565b5b9060005260206000209060020201600001600182604001518280546104ae90611286565b80601f01602080910402602001604051908101604052809291908181526020018280546104da90611286565b80156105275780601f106104fc57610100808354040283529160200191610527565b820191906000526020600020905b81548152906001019060200180831161050a57829003601f168201915b50505050509250935093509350505b9193909250565b6060610553677d689bb97d99c28860c01b610c23565b61056767602e853b5549e35a60c01b610c23565b61057b67d65d40c5d60e45b760c01b610c23565b6004805480602002602001604051908101604052809291908181526020016000905b8282101561066b57838290600052602060002090600202016040518060400160405290816000820180546105d090611286565b80601f01602080910402602001604051908101604052809291908181526020018280546105fc90611286565b80156106495780601f1061061e57610100808354040283529160200191610649565b820191906000526020600020905b81548152906001019060200180831161062c57829003601f168201915b505050505081526020016001820154815250508152602001906001019061059d565b50505050905090565b61067c610c26565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106ee5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016106e59190610f91565b60405180910390fd5b6106f781610cad565b50565b61070e67551a874f337542b260c01b610c23565b610722671a48ac278c2a342860c01b610c23565b6107366775cd1442506de79e60c01b610c23565b60018060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016107929190610f91565b602060405180830381865afa1580156107af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d39190611623565b1015610833576107ed67d28bb2b987d33d2360c01b610c23565b610801673e9932ae5bd456a360c01b610c23565b6040517fd70a47b000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610847671a21c5ad63a773df60c01b610c23565b61085b67055bcf360d6691ab60c01b610c23565b61086f67f556826f8a34588960c01b610c23565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff161561091e576108d8678ba850989519bff560c01b610c23565b6108ec67a25a0b57d157717f60c01b610c23565b6040517fdfd9cfc900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61093267b7587ee5136225bb60c01b610c23565b61094667237efa8d1d7222c460c01b610c23565b61095a67cec9760f4341ec6f60c01b610c23565b60005b600480549050811015610bd95761097e67eb4e054c4eec9a3e60c01b610c23565b61099267bd727323401c03a560c01b610c23565b8180519060200120600482815481106109ae576109ad6115c8565b5b90600052602060002090600202016000016040516109cc91906116f3565b604051809103902003610bb8576109ed6714d95b9e020d545160c01b610c23565b610a016753ea7c5929b3729260c01b610c23565b600160048281548110610a1757610a166115c8565b5b90600052602060002090600202016001016000828254610a37919061170a565b92505081905550610a52678f1dc90fabded9b260c01b610c23565b604051806060016040528082815260200160011515815260200142815250600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548160ff02191690831515021790555060408201518160020155905050610afa67cb6315273762969960c01b610c23565b60036000815480929190610b0d9061173e565b9190505550610b26674b275eecdad08b7260c01b610c23565b610b3a677952bcb7af98e03860c01b610c23565b3373ffffffffffffffffffffffffffffffffffffffff167f35b4034b2bbe10bb07b21969c986794a6276a531bb155886a9f883bb5c9dc8e88342604051610b82929190611598565b60405180910390a2610b9e670f45a2d1978b84d460c01b610c23565b610bb26782a12a87a98f439e60c01b610c23565b50610c20565b610bcc67590d736654f07a5060c01b610c23565b808060010191505061095d565b50610bee6769f1730f09c3d89360c01b610c23565b6040517f7ca3497d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b50565b610c2e610d71565b73ffffffffffffffffffffffffffffffffffffffff16610c4c6102d5565b73ffffffffffffffffffffffffffffffffffffffff1614610cab57610c6f610d71565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610ca29190610f91565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000819050919050565b610d8c81610d79565b82525050565b6000602082019050610da76000830184610d83565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e1482610dcb565b810181811067ffffffffffffffff82111715610e3357610e32610ddc565b5b80604052505050565b6000610e46610dad565b9050610e528282610e0b565b919050565b600067ffffffffffffffff821115610e7257610e71610ddc565b5b610e7b82610dcb565b9050602081019050919050565b82818337600083830152505050565b6000610eaa610ea584610e57565b610e3c565b905082815260208101848484011115610ec657610ec5610dc6565b5b610ed1848285610e88565b509392505050565b600082601f830112610eee57610eed610dc1565b5b8135610efe848260208601610e97565b91505092915050565b600060208284031215610f1d57610f1c610db7565b5b600082013567ffffffffffffffff811115610f3b57610f3a610dbc565b5b610f4784828501610ed9565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f7b82610f50565b9050919050565b610f8b81610f70565b82525050565b6000602082019050610fa66000830184610f82565b92915050565b610fb581610f70565b8114610fc057600080fd5b50565b600081359050610fd281610fac565b92915050565b600060208284031215610fee57610fed610db7565b5b6000610ffc84828501610fc3565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561103f578082015181840152602081019050611024565b60008484015250505050565b600061105682611005565b6110608185611010565b9350611070818560208601611021565b61107981610dcb565b840191505092915050565b60008115159050919050565b61109981611084565b82525050565b600060608201905081810360008301526110b9818661104b565b90506110c86020830185611090565b6110d56040830184610d83565b949350505050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b600061112582611005565b61112f8185611109565b935061113f818560208601611021565b61114881610dcb565b840191505092915050565b61115c81610d79565b82525050565b6000604083016000830151848203600086015261117f828261111a565b91505060208301516111946020860182611153565b508091505092915050565b60006111ab8383611162565b905092915050565b6000602082019050919050565b60006111cb826110dd565b6111d581856110e8565b9350836020820285016111e7856110f9565b8060005b858110156112235784840389528151611204858261119f565b945061120f836111b3565b925060208a019950506001810190506111eb565b50829750879550505050505092915050565b6000602082019050818103600083015261124f81846111c0565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061129e57607f821691505b6020821081036112b1576112b0611257565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026113197fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826112dc565b61132386836112dc565b95508019841693508086168417925050509392505050565b6000819050919050565b600061136061135b61135684610d79565b61133b565b610d79565b9050919050565b6000819050919050565b61137a83611345565b61138e61138682611367565b8484546112e9565b825550505050565b600090565b6113a3611396565b6113ae818484611371565b505050565b5b818110156113d2576113c760008261139b565b6001810190506113b4565b5050565b601f821115611417576113e8816112b7565b6113f1846112cc565b81016020851015611400578190505b61141461140c856112cc565b8301826113b3565b50505b505050565b600082821c905092915050565b600061143a6000198460080261141c565b1980831691505092915050565b60006114538383611429565b9150826002028217905092915050565b61146c82611005565b67ffffffffffffffff81111561148557611484610ddc565b5b61148f8254611286565b61149a8282856113d6565b600060209050601f8311600181146114cd57600084156114bb578287015190505b6114c58582611447565b86555061152d565b601f1984166114db866112b7565b60005b82811015611503578489015182556001820191506020850194506020810190506114de565b86831015611520578489015161151c601f891682611429565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061156f82610d79565b915061157a83610d79565b925082820390508181111561159257611591611535565b5b92915050565b600060408201905081810360008301526115b2818561104b565b90506115c16020830184610d83565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b61160081610d79565b811461160b57600080fd5b50565b60008151905061161d816115f7565b92915050565b60006020828403121561163957611638610db7565b5b60006116478482850161160e565b91505092915050565b600081905092915050565b60008190508160005260206000209050919050565b6000815461167d81611286565b6116878186611650565b945060018216600081146116a257600181146116b7576116ea565b60ff19831686528115158202860193506116ea565b6116c08561165b565b60005b838110156116e2578154818901526001820191506020810190506116c3565b838801955050505b50505092915050565b60006116ff8284611670565b915081905092915050565b600061171582610d79565b915061172083610d79565b925082820190508082111561173857611737611535565b5b92915050565b600061174982610d79565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361177b5761177a611535565b5b60018201905091905056fea264697066735822122053e75ca08fff640444b8633b49fa8c8c0013c1da73c9df91f9afa2437484d09a64736f6c63430008180033";

type PartyVoteConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PartyVoteConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PartyVote__factory extends ContractFactory {
  constructor(...args: PartyVoteConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name, tokenAddress, overrides || {});
  }
  override deploy(
    name: string,
    tokenAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, tokenAddress, overrides || {}) as Promise<
      PartyVote & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PartyVote__factory {
    return super.connect(runner) as PartyVote__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PartyVoteInterface {
    return new Interface(_abi) as PartyVoteInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PartyVote {
    return new Contract(address, _abi, runner) as unknown as PartyVote;
  }
}
